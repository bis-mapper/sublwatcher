.Object Name: EXPORT
*
*===================================================================================================
:INCLUDE,ecab$,B,1 .                                                                         INCLUDE
@.
@.    #---------------------------------------------------------------------------------------------
@.    #  EXPORT
@.    #  TODO Write program description
@.    #  TODO Include examples and documentations
@.    #  Written: 08/15/2013
@.    #---------------------------------------------------------------------------------------------
@.
@.    # Test Setup
@ rdb ldv <appname>s20='icebuild',<ctl>s80='export 100 -f '<appname> .
@     ldv <file>s42='%USERPROFILE%\sublwatcher\site-'netsit$'\'<appname>'\'<appname>'\0f100.bis' .
@     ldv <runname>s12='export' .
@     call 0001 (<ctl>,<file>,<runname>,<status>h1) .
@     GTO END .
@.
@.    #  Call entry point
@0001:(<ctl>,<file>,<runname>,<status>) .
@     rnm -1 .
@.
@     ldv <status>=0 .
@.
@     SUBLRER_ .
@     rsr,SUBLCOMMON_ configVars_ .
@     call,SUBLCOMMON_ appPath_ (<user>,<apppath>s256) .
@.
@     ldv <pth>s256=<datadir>'\' .
@.
@.    #  Check if DEFINE Table exists
@     ldv <*deflist>h1=n .
@     if DEFLIST_ eq 'DEFLIST_'  gto 0004 . ; .
@     lzr,DEFLIST_,0004 .
@     dvs,DEFLIST_,0004 'Define','Category' <def>s,<cat>s .
@     ldv <*deflist>=y .
@.
@.
@.
@.    #=== Dis Dat NEW NEW =========================================================================
@.    #===   READ folderexport FROM SUBLCONFIG.INF
@     call,SUBLCOMMON_ readConfigInf_ ('CONFIG','folderexport',<value>s100) .
@     if <value>(p) eq ''  call,SUBLSETUP_ 0101 () . ; ldv,p <prjfld>h18=<value>  gto lin+2 .
@     gto lin-2 .
@     lcv,lin+1 '' <ctl> 'site'/''  ldv <prjfld>h4='site' .
@     lcv,lin+1 '' <ctl> 'project'/''  ldv <prjfld>h7='project' .
@     if <ctl>(p) eq 'export','EXPORT','Export' . ; gto 0004 .
@     def,s <sz>i3,<file>  dec,13 <sz>  .
@     ldv,p <tmpa>s998=<file>  lcv,0181 '' <tmpa> '.BIS'/''  ldv,p <tmpa>,<tmpb>h9=<tmpa>(0-9) .
@     lcv,lin+1 '' <tmpb> ')' <vpos>i2  inc <vpos>  ldv,p <tmpc>h9=<tmpb>(<vpos>-0),<tmpb>h9=<tmpc>
@     call,SUBLCOMMON_ getCabDrwRpt_ (<tmpb>,<cab>i4,<drw>h1,<rpt>i4) .
@     ldv,u <cab>,<drw>,<rpt> .
@     fnd,200,b,4,,0182 '' 'CAB' ¬,<cab> ,<rln>i6 .
@     rdl,200,b,4,<rln> 'CATEGORY' <catname>s .
@     ldv <ctl>s80='export '<cab>(p)' -f '<catname> .
@.
@.
@.
@.    #  Read in <ctl> Control Line Input for what to Export
@0004:lcv,0199 't@' <ctl> ' ' <vpos>i3  inc <vpos> .
@     ldv,p <ctlopt>s40=<ctl>(<vpos>-0) .
@.
@.    #  Check for folder flag
@     lcv,lin+4 '' <ctlopt> '-f' <fpos>i3 .
@     inc,2 <fpos>  ldv <ifolder>s40=<ctlopt>(<fpos>-0) .
@     ldv <pth>=<pth>(p)<ifolder>(lp)'\' .                                      Add folder to base path
@     dec,3 <fpos>  ldv,p <t>s40=<ctlopt>(1-<fpos>),<ctlopt>s40=<t> .           Exclude folder option
@.
@.    #
@.    #  Export by cabinet number... EXPORT 56
@.    #
@     def <ty>i2,<ctlopt>  if <ty> eq 1 . ; gto 0010 .                          Numeric only for cabinet option
@     ldv <drawers>h8='BCDEFGHI',<drwref>i1=0,<drw>h1,<cab>i4=<ctlopt> .
@0005:inc <drwref>  if <drwref> eq 9,(0199) .                                   Loop through drawers
@     ldv <drw>=<drawers>(<drwref>-1) .
@     ldv <drawer>h11='0'<drw><cab>  call 0200 (<drawer>,<exist>h1) .
@     if <exist> eq 0 . ; gto 0005 .
@     drw,<cab>,<drw>,0005 ,,,,,<vhirptd>i4,,,,,,<folder>s26 .                  Drawer exist?
@     if <folder> eq ' ' gto 0180 . ; .
@     ldv <rpt>i4=-1 .
@0007:inc <rpt>  if <rpt> gt <vhirptd>,(0005) .
@     call 0100 (<pth>,<cab>,<drw>,<rpt>,<folder>,<program>s40,<epath>s256,<status>h1) .
@     if <status> eq 0 . ; gto 0007 .
@     rsl,<cab>,<drw>,<rpt>  ldv,p <efile>s256=<epath>(p)<program> .
@     call 0120 (<efile>,<status>) .
@     gto 0007 .                                                                Next report
@.
@.    #
@.    #  Export by cabinet+drawer... EXPORT 56b or b56
@.    #
@0010:def,p <sz>i3,<ctlopt>  if <sz> le 5 . ; gto 0090 .
@     if <ty> eq 3 . ; gto 0090 .                                               Alphanumeric
@     lcv,lin+1 b1 <ctlopt> 'a' <apos>a1  gto 0012 .
@     lcv,lin+1 b1 <ctlopt> 'b' <apos>a1  gto 0012 .
@     lcv,lin+1 b1 <ctlopt> 'c' <apos>a1  gto 0012 .
@     lcv,lin+1 b1 <ctlopt> 'd' <apos>a1  gto 0012 .
@     lcv,lin+1 b1 <ctlopt> 'e' <apos>a1  gto 0012 .
@     lcv,lin+1 b1 <ctlopt> 'f' <apos>a1  gto 0012 .
@     lcv,lin+1 b1 <ctlopt> 'g' <apos>a1  gto 0012 .
@     lcv,lin+1 b1 <ctlopt> 'h' <apos>a1  gto 0012 .
@     lcv,lin+1 b1 <ctlopt> 'i' <apos>a1 .
@.
@.    #  Handle both formats f402 or 402f
@0012:if <apos> eq 1 . ; gto lin+4 .
@     ldv <drw>h1=<ctlopt>(<apos>-1) .
@     inc <apos>  ldv <cab>i4=<ctlopt>(<apos>-0) .
@     gto lin+3 .
@     dec <apos>    ldv <cab>i4=<ctlopt>(1-<apos>) .
@     inc,2 <apos>  ldv <drw>h1=<ctlopt>(<apos>-1) .
@     ldv <drawer>h11='0'<drw><cab>  call 0200 (<drawer>,<exist>h1) .
@     if <exist> eq 0 . ; gto 0012 .
@     drw,<cab>,<drw>,0012 ,,,,,<vhirptd>i4,,,,,,<folder>s26 .                  Drawer exist?
@     ldv <rpt>i4=-1 .
@0013:inc <rpt>  if <rpt> gt <vhirptd>,(0199) .
@     call 0100 (<pth>,<cab>,<drw>,<rpt>,<folder>,<program>s40,<epath>s256,<status>h1) .
@     if <status> eq 0 . ; gto 0013 .
@     rsl,<cab>,<drw>,<rpt>  ldv,p <efile>s256=<epath>(p)<program> .
@     call 0120 (<efile>,<status>) .
@.
@. @     rsr 0100 .                                                                Export file
@     gto 0013 .                                                                Next report
@.
@.    #
@.    #  Export ICE Category... ICE_MODULES_TEST
@.    #
@.    #  Export entire application
@.    #  Export entire ice category
@.    #  Export entire ice application
@.
@.    #  Write file back out to same path
@0090:pcw,-0,2 <file> .
@     pc,r '"'<apppath>(p)'" -a' '"'<file>'"' .                                 Re-start editor
@     gto 0199 .
@.
@.    ##############################################################################################
@.    #  Subroutine: Export File
@.    ##############################################################################################
@0100:(<pth>,<cab>,<drw>,<rpt>,<folder>,<program>,<epath>,<status>) .
@     ldv <status>=0 .
@.
@     lzr,<cab>,<drw>,<rpt>,lin+1 ,,,,,,,,,,<rtype>h1  gto lin+2 .
@     ldv <status>=9  gto 0115 .
@     lcv,lin+1 '' <folder> '*'/ .
@     ldv,p <folder> .
@.
@.    #  Determine if ICEBUILD app and force folder name for drawer F to controllers
@     ldv <ibld>h1=n .
@     if <*deflist> eq y . ; gto 0101 .
@     srh,DEFLIST_,,,0101 'd' 'Cab','icebld' ¬,<cab>(r),'yes' .
@     ldv <ibld>h1=y .
@.
@0101:lcv,lin+1 '' <folder> 'PARAM'  ldv <status>=9  gto 0115 .
@     lcv,lin+1 '' <folder> 'PAR'  ldv <status>=9  gto 0115 .
@     lcv,lin+1 '' <folder> 'DUMPS'  ldv <status>=9  gto 0115 .
@     if <rtype> eq 1 . ; gto lin+3 .                                           Binary report?
@     rdl,<cab>,<drw>,<rpt>,2 2-20 <srvs>s .                                    Get name from report
@     ldv,p <program>=<srvs>  gto lin+3 .
@     call,SUBLCOMMON_ chkIceSvc_ (<cab>,<drw>,<rpt>,<srvs>s30) .               Ice Service?
@     ldv,p <program>=<srvs>(p)<rpt>(p)<drw>(p)<cab>(p)'.BIS' .
@.
@.    #  Non IBLD applications create folder
@     if <ibld> eq n . ; gto 0102 .
@     ldv,p <epath>s256=<pth>(p)<folder>(p)'\' .
@     call,SUBLCOMMON_ chkMkDir_ (<pth>,<folder>,<epath>) .
@     gto 0115 .
@.
@.    #  For IBLD applications change folder structure
@.    #  These drawers get put under the APP folder
@0102:if <drw> eq f,i,h . ; gto 0105 .
@     ldv <appfolder>h3='app' .
@     if <drw> eq f  ldv <folder>s11='controllers' . ; .
@     ldv,p <epath>s256=<pth>(p)<appfolder>(p)'\' .
@     call,SUBLCOMMON_ chkMkDir_ (<pth>,<appfolder>,<epath>) .
@     ldv,p <tpath>s256=<pth>(p)<appfolder>(p)'\' .
@     ldv,p <epath>s256=<pth>(p)<appfolder>(p)'\'<folder>'\' .
@     call,SUBLCOMMON_ chkMkDir_ (<tpath>,<folder>,<epath>) .
@.
@.    #  Generate shared folder for VIEW
@0103:if <drw> eq 'H'  if <rpt> ge 1000 . ; gto 0105 .
@     ldv,p <sharedfldr>h7='shared' .
@     ldv,p <tpath>s256=<pth>(p)<appfolder>(p)'\views\' .
@     ldv,p <epath>s256=<pth>(p)<appfolder>(p)'\views\'<sharedfldr>'\' .
@     call,SUBLCOMMON_ chkMkDir_ (<tpath>,<sharedfldr>,<epath>) .
@.
@.    #  These drawers get put under the DB folder
@0105:if <drw> eq b,e . ; gto 0107 .
@     ldv <dbfolder>h2='db' .
@     ldv,p <epath>s256=<pth>(p)<dbfolder>(p) .
@     call,SUBLCOMMON_ chkMkDir_ (<pth>,<dbfolder>,<epath>) .
@     ldv,p <tpath>s256=<pth>(p)<dbfolder>(p)'\' .
@     ldv,p <epath>s256=<pth>(p)<dbfolder>(p)'\'<folder>(p)'\' .
@     call,SUBLCOMMON_ chkMkDir_ (<tpath>,<folder>,<epath>) .
@     gto 0115 .
@.
@.    #  These drawers get put under the LIB folder
@0107:if <drw> eq c,d . ; gto 0115 .
@     if <drw> eq c  ldv,p <folder>s10='internal' . ; .
@     if <drw> eq d  ldv,p <folder>s10='tables' . ; .
@     ldv <libfolder>h3='lib' .
@     ldv,p <epath>s256=<pth>(p)<libfolder>(p) .
@     call,SUBLCOMMON_ chkMkDir_ (<pth>,<libfolder>,<epath>) .
@     ldv,p <tpath>s256=<pth>(p)<libfolder>(p)'\' .
@     ldv,p <epath>s256=<pth>(p)<libfolder>(p)'\'<folder>(p)'\' .
@     call,SUBLCOMMON_ chkMkDir_ (<tpath>,<folder>,<epath>) .
@     gto 0115 .
@.
@. @0115:ldv,p <expfile>s256=<epath>(p)<program> .
@. @     rsl,<cab>,<drw>,<rpt> .
@. @     if <rtype> eq 1,(lin+2) .                                                 Skip binary
@. @     call,SUBLCOMMON_ charReplace_ ('export') .                                Replace tab character
@. @     pcw,-0,2 <expfile> .                                                      Write file
@.
@0115:return .
@.
@0120:(<file>,<status>) .
@     lzr,-0 ,,,,,,,,,,<rtype>h1 .
@     if <rtype> eq 1,(lin+2) .                                                 Skip binary
@     call,SUBLCOMMON_ charReplace_ ('export') .                                Replace tab character
@     pcw,-0,2 <file> .                                                         Write file
@     return .
@.
@.
@.    #  Error messages
@0180:ldv <status>=9,<msg>s80='Cabinet drawer table 3g6 has blank description for cab: '<cab> .
@     call,GROWL_ 0001 ('Sublwatcher: Error!','FAILED',<msg>) .
@     return .
@.
@0181:ldv <status>=8,<msg>s80='FILE MISSING BIS EXTENSION!' .
@     call,GROWL_ 0001 ('Sublwatcher: Error!','FAILED',<msg>) .
@     return .
@.
@0182:ldv <status>=7,<msg>s80='Simple Export failed, more parameters needed!' .
@     call,GROWL_ 0001 ('Sublwatcher: Error!','FAILED',<msg>) .
@     return .
@.
@.    #  Show success message
@0199:chg <err>i4 cerr$  lsm,<err> <msg>s88 .
@     if <msg> eq ' ' . ; gto lin+3 .
@     ldv <msg>s80='Export Complete!',<status>=0 .
@     call,GROWL_ 0001 ('Sublwatcher: Success!','SUCCESS',<msg>) .
@     if <prjfld> eq 'site'  pc,r "<apppath>(p) -a" "<datadir>\" . ; .
@     if <prjfld> eq 'project'  pc,r "<apppath>(p) -a" "<datadir>\<catname>" . ; .
@.
@.    # Exit
@     return .
@.
@.
@.    # Check if drawer exists... This should work with @drw but for some reason it's not
@0200:(<rpt>,<exist>) .
@     ldv <exist>h1=0 .
@     dir <rpt> ,,,,,<acc>h1  if <acc> eq ''  ldv <exist>=9 .                    If no error routine
@     return .
