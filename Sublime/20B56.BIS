.Object Name: EXPORT
*
*===================================================================================================
:INCLUDE,ECAB$,B,1 .                                                                         INCLUDE
@.
@.    #---------------------------------------------------------------------------------------------
@.    #  EXPORT
@.    #  TODO Write program description
@.    #  TODO Include examples and documentations
@.    #  Written: 08/15/2013
@.    #---------------------------------------------------------------------------------------------
@.
@.    # Test Setup
@ RDB LDV <CTL>s80='build 56 -fsublwatcher' .
@     LDV <FILE>s42='D\Users\winne\sublwatcher\site-d\2f832.bis' .
@     LDV <RUNNAME>s12='export' .
@     CALL 0001 (<CTL>,<FILE>,<RUNNAME>,<STATUS>h1) .
@     GTO END .
@.
@0001:(<CTL>,<FILE>,<RUNNAME>,<STATUS>) .
@.
@     RAR,0,E,2 0199 .                                                          sets-run-abort
@     RER,0,E,2 0199 .                                                          sets-run-error
@     RSR,SUBLCOMMON_ configVars_ .
@     CALL,SUBLCOMMON_ appPath_ (<USER>,<APPPATH>s256) .
@.
@     CALL,SUBLCOMMON_ getFileName_ (<FILE>,<RUN>s60) .                         Extracts File Name from path
@     LCV,lin+1 'b99' <RUN> '.bis'/''  GTO lin+4 .                                   Remove file type
@     LDV <MSG>s256='Must be BIS file type' .
@     CALL,GROWL_ 0001 ('subwatcher: warning!','FAILED',<MSG>) .
@     GTO 0199 .
@.
@.    #  Open windows explorer using MFXFILE.EXE
@.    #  <PTH> contains users selected path to export the application
@.    LDV <ACT>h4=OPEN .
@.    CALL,EDRW$,0004 0001 (<ACT>,<PTH>s256,<FIL>s64,<SPT>s64,<SFL>h12,<TYP>h1,<STS>h3) .
@.    IF <STS> ne 'OK ',(0199) .
@     LDV <PTH>s256=<DATADIR>'\' .
@.
@.    #  Read in <CTL> Control Line Input for what to Export
@     LCV,0199 't@' <CTL> ' ' <VPOS>i3  INC <VPOS> .
@     LDV,p <CTLOPT>s40=<CTL>(<VPOS>-0) .
@.
@.    #  Check for folder flag
@     LCV,lin+4 '' <CTLOPT> '-f' <FPOS>i3 .
@     INC,2 <FPOS>  LDV <IFOLDER>s40=<CTLOPT>(<FPOS>-0) .
@     LDV <PTH>=<PTH>(p)<IFOLDER>(lp)'\' .                                      Add folder to base path
@     DEC,3 <FPOS>  LDV,p <T>s40=<CTLOPT>(1-<FPOS>),<CTLOPT>s40=<T> .           Exclude folder option
@.
@.    #
@.    #  Export by cabinet number... EXPORT 56
@.    #
@     DEF <TY>i2,<CTLOPT>  IF <TY> eq 1 . ; GTO 0010 .                          Numeric only for cabinet option
@     LDV <DRAWERS>h8='BCDEFGHI',<DRWREF>i1=0,<DRW>h1,<CAB>i4=<CTLOPT> .
@0002:INC <DRWREF>  IF <DRWREF> eq 9,(0199) .                                   Loop through drawers
@     LDV <DRW>=<DRAWERS>(<DRWREF>-1) .
@     LDV <DRAWER>h11='0'<DRW><CAB>  CALL 0110 (<DRAWER>,<EXIST>h1) .
@     IF <EXIST> eq 0 . ; GTO 0002 .
@     DRW,<CAB>,<DRW>,0002 ,,,,,<VHIRPTD>i4,,,,,,<FOLDER>s26 .                  Drawer exist?
@     LDV <RPT>i4=0 .
@0003:INC <RPT>  IF <RPT> gt <VHIRPTD>,(0002) .
@     RSR 0100 .                                                                Export file
@     GTO 0003 .                                                                Next report
@.
@.    #
@.    #  Export by cabinet+drawer... EXPORT 56b or b56
@.    #
@0010:DEF,p <SZ>i3,<CTLOPT>  IF <SZ> le 5 . ; GTO 0020 .
@     IF <TY> eq 3 . ; GTO 0020 .                                               Alphanumeric
@     LCV,lin+1 b1 <CTLOPT> 'a' <APOS>a1  GTO 0012 .
@     LCV,lin+1 b1 <CTLOPT> 'b' <APOS>a1  GTO 0012 .
@     LCV,lin+1 b1 <CTLOPT> 'c' <APOS>a1  GTO 0012 .
@     LCV,lin+1 b1 <CTLOPT> 'd' <APOS>a1  GTO 0012 .
@     LCV,lin+1 b1 <CTLOPT> 'e' <APOS>a1  GTO 0012 .
@     LCV,lin+1 b1 <CTLOPT> 'f' <APOS>a1  GTO 0012 .
@     LCV,lin+1 b1 <CTLOPT> 'g' <APOS>a1  GTO 0012 .
@     LCV,lin+1 b1 <CTLOPT> 'h' <APOS>a1  GTO 0012 .
@     LCV,lin+1 b1 <CTLOPT> 'i' <APOS>a1 .
@.
@.    #  Handle both formats f402 or 402f
@0012:IF <APOS> eq 1 . ; GTO lin+4 .
@     LDV <DRW>h1=<CTLOPT>(<APOS>-1) .
@     INC <APOS>  LDV <CAB>i4=<CTLOPT>(<APOS>-0) .
@     GTO lin+3 .
@     DEC <APOS>    LDV <CAB>i4=<CTLOPT>(1-<APOS>) .
@     INC,2 <APOS>  LDV <DRW>h1=<CTLOPT>(<APOS>-1) .
@     LDV <DRAWER>h11='0'<DRW><CAB>  CALL 0110 (<DRAWER>,<EXIST>h1) .
@     IF <EXIST> eq 0 . ; GTO 0012 .
@     DRW,<CAB>,<DRW>,0012 ,,,,,<VHIRPTD>i4,,,,,,<FOLDER>s26 .                  Drawer exist?
@     LDV <RPT>i4=0 .
@0013:INC <RPT>  IF <RPT> gt <VHIRPTD>,(0199) .
@     RSR 0100 .                                                                Export file
@     GTO 0013 .                                                                Next report
@.
@.    #
@.    #  Export ICE Category... ICE_MODULES_TEST
@.    #
@0020:.
@.    #  Export entire application
@.    #  Export entire ice category
@.    #  Export entire ice application
@.
@.    #  Write file back out to same path
@     PCW,-0,2 <FILE> .
@     PC,r '"'<APPPATH>(p)'" -a' '"'<FILE>'"' .                                 Re-start editor
@     GTO 0199 .
@.
@.    ##############################################################################################
@.    #  Subroutine: Export File
@.    ##############################################################################################
@0100:LZR,<CAB>,<DRW>,<RPT>,0105 ,,,,,,,,,,<RTYPE>h1 .
@     LDV,p <FOLDER> .
@     IF <RTYPE> eq 1 . ; GTO lin+3 .                                           Binary report?
@     RDL,<CAB>,<DRW>,<RPT>,2 2-20 <SRVS>s .                                    Get name from report
@     LDV,p <PROGRAM>s20=<SRVS>  GTO lin+3 .
@     CALL,SUBLCOMMON_ chkIceSvc_ (<CAB>,<DRW>,<RPT>,<SRVS>s30) .               Ice Service?
@     LDV,p <PROGRAM>s40=<SRVS>(p)<RPT>(p)<DRW>(p)<CAB>(p)<EXT> .
@     LDV,p <EXPATH>s256=<PTH>(p)<FOLDER>(p)'\' .
@     CALL,SUBLCOMMON_ chkMkDir_ (<PTH>,<FOLDER>,<EXPATH>) .
@     LDV,p <EXPFILE>s256=<EXPATH>(p)<PROGRAM> .
@     RSL,<CAB>,<DRW>,<RPT> .
@     IF <RTYPE> eq 1,(lin+2) .                                                 Skip binary
@     CALL,SUBLCOMMON_ charReplace_ ('export') .                                Replace tab character
@     PCW,-0,2 <EXPFILE> .                                                      Write file
@0105:ESR .
@.
@.    # Check if drawer exists... This should work with @drw but for some reason it's not
@0110:(<RPT>,<EXIST>) .
@     LDV <EXIST>h1=0 .
@     dir <RPT> ,,,,,<ACC>h1  IF <ACC> eq ''  LDV <EXIST>=9 .                    If no error routine
@     return .
@.
@.    # Exit
@0199:RETURN .
